q()
install.packages("swirl")
q()
Feeds <- which(beren3$event == "bottle")
setwd("C:\\Users\\godfr\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_02")
beren3 <- read.csv("beren_new.csv", stringsAsFactors = F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
#tapply() function takes some data (for us the Value) and
#some treatment(for us age in days) and applies some other function to those data
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
plot(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor
#~ the function of
berenANOVA <- aov(beren3$value[Feeds] ~ beren3caregiver[Feeds])
#use boxplot function to plot data
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab = "amount of milk consumed (oz)")
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height = 4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
beren4 <- which(beren3$event == "nap")
Starttime <- ((beren3$start_hour[beren4]) * 60) + (beren3$start_minute[beren4])
endtime <- ((beren3$end_hour[berern4]) * 60) + (berern3$end_minute[berern4])
endtime <- ((beren3$end_hour[beren4]) * 60) + (berern3$end_minute[berern4])
endtime <- ((beren3$end_hour[beren4]) * 60) + (beren3$end_minute[berern4])
endtime <- ((beren3$end_hour[beren4]) * 60) + (beren3$end_minute[beren4])
#Subtract the end and start times to get the totaltime spent sleeping for each nap
totalnap <- endtime - starttime
totalnap <- endtime - Starttime
totalnap
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as,numeric(names(totalnap)), totalnap, type="b", pch=16, xlab="total slept time", ylab="day")
abline(h=mean(totalnap), lty=2, col='red')
plot(as.numeric(names(totalnap)), totalnap, type="b", pch=16, xlab="total slept time", ylab="day")
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
?par
beren4 <- which(beren3$event == "nap")
Starttime <- ((beren3$start_hour[beren4]) * 60) + (beren3$start_minute[beren4])
endtime <- ((beren3$end_hour[beren4]) * 60) + (beren3$end_minute[beren4])
durnap <- endtime - Starttime
avgnap <- mean(durnap[beren4])
varnap <- tapply(durnap, beren3$age[beren4], var)
totalnap <- tapply(durnap, beren3$age[beren4], sum)
numnap <- tapply(durnap, beren3$age[beren4], length)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalnap)), totalnap, type="b", pch=16, xlab="total slept time", ylab="day")
abline(h=mean(totalnap), lty=2, col='red')
NapCor <- cor.test(starttime, totalnap)
NapCor <- cor.test(Starttime, totalnap)
NapCor <- cor.test(Starttime, durnap)
